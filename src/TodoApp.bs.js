// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("TodoItem");

function make(item, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("div", {
                          className: "item"
                        }, React.createElement("input", {
                              checked: item[/* completed */1]
                            }), item[/* title */0]);
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var TodoItem = /* module */[
  /* component */component,
  /* make */make
];

var component$1 = ReasonReact.reducerComponent("TodoApp");

function newItem(param) {
  return /* record */[
          /* title */"Click a button",
          /* completed */true
        ];
}

function make$1(_children) {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */component$1[/* didMount */4],
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (self) {
              var numItems = List.length(self[/* state */1][/* items */0]);
              return React.createElement("div", {
                          className: "app"
                        }, React.createElement("div", {
                              className: "title"
                            }, "What to do", React.createElement("button", {
                                  onClick: (function (_event) {
                                      return Curry._1(self[/* send */3], /* AddItem */0);
                                    })
                                }, "Add something")), React.createElement("div", {
                              className: "items"
                            }, $$Array.of_list(List.map((function (item) {
                                        return ReasonReact.element(undefined, undefined, make(item, /* array */[]));
                                      }), self[/* state */1][/* items */0]))), React.createElement("div", {
                              className: "items"
                            }, "Nothing"), React.createElement("div", {
                              className: "footer"
                            }, String(numItems) + " items"));
            }),
          /* initialState */(function (param) {
              return /* record */[/* items : :: */[
                        /* record */[
                          /* title */"Write some things to do",
                          /* completed */false
                        ],
                        /* [] */0
                      ]];
            }),
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */(function (action, param) {
              return /* Update */Block.__(0, [/* record */[/* items : :: */[
                            /* record */[
                              /* title */"Click a button",
                              /* completed */true
                            ],
                            param[/* items */0]
                          ]]]);
            }),
          /* jsElementWrapped */component$1[/* jsElementWrapped */13]
        ];
}

exports.TodoItem = TodoItem;
exports.component = component$1;
exports.newItem = newItem;
exports.make = make$1;
/* component Not a pure module */
